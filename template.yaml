AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  SAMLogs:
    Type: AWS::Logs::LogGroup

  SortingHatsApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      FailOnWarnings: True
      DefinitionBody:
        openapi: 3.0.1
        x-amazon-apigateway-importexport-version: "1.0"
        x-amazon-apigateway-cors:
          allowMethods:
            - "POST"
          allowHeaders:
            - "content-type"
          maxAge: 0
          allowCredentials: false
          allowOrigins:
          - "*"
        info:
          version: 1.0
          title: 
            Ref: AWS::StackName
        paths:
          "/state":
            post:
              responses: 
                default:
                  description: "Default response for POST /state"
              x-amazon-apigateway-integration:
                type: "aws_proxy"
                integrationSubtype: "StepFunctions-StartSyncExecution"
                credentials:
                  Fn::GetAtt: [HttpApiRole, Arn]
                requestParameters:
                  Input: "$request.body"
                  StateMachineArn: !Ref InteractiveStateMachine
                payloadFormatVersion: "1.0"
                connectionType: "INTERNET"
          "/groups":
            post:
              responses:
                default:
                  description: "Default response for POST /groups"
              x-amazon-apigateway-integration:
                type: "aws_proxy"
                uri: 
                  Fn::GetAtt: [ListGroupFunction, Arn]
                credentials:
                  Fn::GetAtt: [HttpApiRole, Arn]
                payloadFormatVersion: "1.0"
                connectionType: "INTERNET"

  InteractiveStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      DefinitionUri: interative.asl.json
      DefinitionSubstitutions:
        TransformFunctionArn: !GetAtt TransformFunction.Arn
        CreateGroupFunctionArn: !GetAtt CreateGroupFunction.Arn
        DestroyGroupFunctionArn: !GetAtt DestroyGroupFunction.Arn
      Tracing:
        Enabled: true
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt SAMLogs.Arn
        IncludeExecutionData: true
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TransformFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateGroupFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref DestroyGroupFunction
        - CloudWatchLogsFullAccess
        
  TransformFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: ./bin/transform.zip
      Handler: main
      Runtime: go1.x

  CreateGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./bin/group/create.zip
      Handler: main
      Runtime: go1.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GroupsTable
      Environment:
        Variables:
          GROUPS_TABLE: !Ref GroupsTable

  DestroyGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./bin/group/destroy.zip
      Handler: main
      Runtime: go1.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GroupsTable
      Environment:
        Variables:
          GROUPS_TABLE: !Ref GroupsTable

  ListGroupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./bin/group/index.zip
      Handler: main
      Runtime: go1.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GroupsTable
      Environment:
        Variables:
          GROUPS_TABLE: !Ref GroupsTable

  WorkspacesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SortingHatWorkspace
      AttributeDefinitions:
        - AttributeName: Workspace
          AttributeType: S
      KeySchema:
        - AttributeName: Workspace
          KeyType: HASH
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  ContextsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SortingHatContexts
      AttributeDefinitions:
        - AttributeName: WorkspaceChannel
          AttributeType: S
      KeySchema:
        - AttributeName: WorkspaceChannel
          KeyType: HASH
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  GroupsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SortingHatGroups
      AttributeDefinitions:
        - AttributeName: GroupId
          AttributeType: S
        - AttributeName: ContextReference
          AttributeType: S
      KeySchema:
        - AttributeName: GroupId
          KeyType: HASH
        - AttributeName: ContextReference
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SortingHatSortedTasks
      AttributeDefinitions:
        - AttributeName: GroupId
          AttributeType: S
        - AttributeName: BroadcastedAt
          AttributeType: S
      KeySchema:
        - AttributeName: GroupId
          KeyType: HASH
        - AttributeName: BroadcastedAt
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  HttpApiRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowSFNExec
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "states:StartSyncExecution"
                Resource: !Ref InteractiveStateMachine
        - PolicyName: 
            Fn::Sub: Allow
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - Fn::GetAtt: [TransformFunction, Arn]
                  - Fn::GetAtt: [ListGroupFunction, Arn]
                  - Fn::GetAtt: [DestroyGroupFunction, Arn]
                  - Fn::GetAtt: [CreateGroupFunction, Arn]
Outputs:
  SortingHatsApi:
    Description: "API Gateway endpoint URL for Prod stage for Group Listing function"
    Value: !Sub "https://${SortingHatsApi}.execute-api.${AWS::Region}.amazonaws.com/groups"
